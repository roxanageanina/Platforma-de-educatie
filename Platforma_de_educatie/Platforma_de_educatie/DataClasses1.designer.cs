#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Platforma_de_educatie
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EducatieStiinteNaturale")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUtilizatori(Utilizatori instance);
    partial void UpdateUtilizatori(Utilizatori instance);
    partial void DeleteUtilizatori(Utilizatori instance);
    partial void InsertMaterii(Materii instance);
    partial void UpdateMaterii(Materii instance);
    partial void DeleteMaterii(Materii instance);
    partial void InsertTeste(Teste instance);
    partial void UpdateTeste(Teste instance);
    partial void DeleteTeste(Teste instance);
    partial void InsertIntrebari(Intrebari instance);
    partial void UpdateIntrebari(Intrebari instance);
    partial void DeleteIntrebari(Intrebari instance);
    partial void InsertRaspunsuri(Raspunsuri instance);
    partial void UpdateRaspunsuri(Raspunsuri instance);
    partial void DeleteRaspunsuri(Raspunsuri instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Platforma_de_educatie.Properties.Settings.Default.EducatieStiinteNaturaleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Utilizatori> Utilizatoris
		{
			get
			{
				return this.GetTable<Utilizatori>();
			}
		}
		
		public System.Data.Linq.Table<Materii> Materiis
		{
			get
			{
				return this.GetTable<Materii>();
			}
		}
		
		public System.Data.Linq.Table<Teste> Testes
		{
			get
			{
				return this.GetTable<Teste>();
			}
		}
		
		public System.Data.Linq.Table<Intrebari> Intrebaris
		{
			get
			{
				return this.GetTable<Intrebari>();
			}
		}
		
		public System.Data.Linq.Table<Raspunsuri> Raspunsuris
		{
			get
			{
				return this.GetTable<Raspunsuri>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddUser")]
		public int AddUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nume", DbType="NVarChar(50)")] string nume, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prenume", DbType="NVarChar(50)")] string prenume, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Parola", DbType="NVarChar(50)")] string parola, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TipCont", DbType="NVarChar(20)")] string tipCont)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nume, prenume, username, email, parola, tipCont);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUser")]
		public int DeleteUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_Utilizator", DbType="Int")] System.Nullable<int> iD_Utilizator)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD_Utilizator);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizatori")]
	public partial class Utilizatori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Utilizator;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _Username;
		
		private string _Email;
		
		private string _Parola;
		
		private string _TipCont;
		
		private System.Nullable<System.DateTime> _DataInregistrare;
		
		private EntitySet<Teste> _Testes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UtilizatorChanging(int value);
    partial void OnID_UtilizatorChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnParolaChanging(string value);
    partial void OnParolaChanged();
    partial void OnTipContChanging(string value);
    partial void OnTipContChanged();
    partial void OnDataInregistrareChanging(System.Nullable<System.DateTime> value);
    partial void OnDataInregistrareChanged();
    #endregion
		
		public Utilizatori()
		{
			this._Testes = new EntitySet<Teste>(new Action<Teste>(this.attach_Testes), new Action<Teste>(this.detach_Testes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utilizator", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Utilizator
		{
			get
			{
				return this._ID_Utilizator;
			}
			set
			{
				if ((this._ID_Utilizator != value))
				{
					this.OnID_UtilizatorChanging(value);
					this.SendPropertyChanging();
					this._ID_Utilizator = value;
					this.SendPropertyChanged("ID_Utilizator");
					this.OnID_UtilizatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parola", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Parola
		{
			get
			{
				return this._Parola;
			}
			set
			{
				if ((this._Parola != value))
				{
					this.OnParolaChanging(value);
					this.SendPropertyChanging();
					this._Parola = value;
					this.SendPropertyChanged("Parola");
					this.OnParolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipCont", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TipCont
		{
			get
			{
				return this._TipCont;
			}
			set
			{
				if ((this._TipCont != value))
				{
					this.OnTipContChanging(value);
					this.SendPropertyChanging();
					this._TipCont = value;
					this.SendPropertyChanged("TipCont");
					this.OnTipContChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInregistrare", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataInregistrare
		{
			get
			{
				return this._DataInregistrare;
			}
			set
			{
				if ((this._DataInregistrare != value))
				{
					this.OnDataInregistrareChanging(value);
					this.SendPropertyChanging();
					this._DataInregistrare = value;
					this.SendPropertyChanged("DataInregistrare");
					this.OnDataInregistrareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizatori_Teste", Storage="_Testes", ThisKey="ID_Utilizator", OtherKey="Autor")]
		public EntitySet<Teste> Testes
		{
			get
			{
				return this._Testes;
			}
			set
			{
				this._Testes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Utilizatori = this;
		}
		
		private void detach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Utilizatori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materii")]
	public partial class Materii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Materie;
		
		private string _NumeMaterie;
		
		private string _Descriere;
		
		private EntitySet<Teste> _Testes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MaterieChanging(int value);
    partial void OnID_MaterieChanged();
    partial void OnNumeMaterieChanging(string value);
    partial void OnNumeMaterieChanged();
    partial void OnDescriereChanging(string value);
    partial void OnDescriereChanged();
    #endregion
		
		public Materii()
		{
			this._Testes = new EntitySet<Teste>(new Action<Teste>(this.attach_Testes), new Action<Teste>(this.detach_Testes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Materie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Materie
		{
			get
			{
				return this._ID_Materie;
			}
			set
			{
				if ((this._ID_Materie != value))
				{
					this.OnID_MaterieChanging(value);
					this.SendPropertyChanging();
					this._ID_Materie = value;
					this.SendPropertyChanged("ID_Materie");
					this.OnID_MaterieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeMaterie", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NumeMaterie
		{
			get
			{
				return this._NumeMaterie;
			}
			set
			{
				if ((this._NumeMaterie != value))
				{
					this.OnNumeMaterieChanging(value);
					this.SendPropertyChanging();
					this._NumeMaterie = value;
					this.SendPropertyChanged("NumeMaterie");
					this.OnNumeMaterieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriere", DbType="NVarChar(MAX)")]
		public string Descriere
		{
			get
			{
				return this._Descriere;
			}
			set
			{
				if ((this._Descriere != value))
				{
					this.OnDescriereChanging(value);
					this.SendPropertyChanging();
					this._Descriere = value;
					this.SendPropertyChanged("Descriere");
					this.OnDescriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materii_Teste", Storage="_Testes", ThisKey="ID_Materie", OtherKey="ID_Materie")]
		public EntitySet<Teste> Testes
		{
			get
			{
				return this._Testes;
			}
			set
			{
				this._Testes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Materii = this;
		}
		
		private void detach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Materii = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teste")]
	public partial class Teste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Test;
		
		private string _NumeTest;
		
		private System.Nullable<int> _ID_Materie;
		
		private System.Nullable<int> _Autor;
		
		private System.Nullable<System.DateTime> _DataCreare;
		
		private EntitySet<Intrebari> _Intrebaris;
		
		private EntityRef<Utilizatori> _Utilizatori;
		
		private EntityRef<Materii> _Materii;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TestChanging(int value);
    partial void OnID_TestChanged();
    partial void OnNumeTestChanging(string value);
    partial void OnNumeTestChanged();
    partial void OnID_MaterieChanging(System.Nullable<int> value);
    partial void OnID_MaterieChanged();
    partial void OnAutorChanging(System.Nullable<int> value);
    partial void OnAutorChanged();
    partial void OnDataCreareChanging(System.Nullable<System.DateTime> value);
    partial void OnDataCreareChanged();
    #endregion
		
		public Teste()
		{
			this._Intrebaris = new EntitySet<Intrebari>(new Action<Intrebari>(this.attach_Intrebaris), new Action<Intrebari>(this.detach_Intrebaris));
			this._Utilizatori = default(EntityRef<Utilizatori>);
			this._Materii = default(EntityRef<Materii>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Test", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Test
		{
			get
			{
				return this._ID_Test;
			}
			set
			{
				if ((this._ID_Test != value))
				{
					this.OnID_TestChanging(value);
					this.SendPropertyChanging();
					this._ID_Test = value;
					this.SendPropertyChanged("ID_Test");
					this.OnID_TestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeTest", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NumeTest
		{
			get
			{
				return this._NumeTest;
			}
			set
			{
				if ((this._NumeTest != value))
				{
					this.OnNumeTestChanging(value);
					this.SendPropertyChanging();
					this._NumeTest = value;
					this.SendPropertyChanged("NumeTest");
					this.OnNumeTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Materie", DbType="Int")]
		public System.Nullable<int> ID_Materie
		{
			get
			{
				return this._ID_Materie;
			}
			set
			{
				if ((this._ID_Materie != value))
				{
					if (this._Materii.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MaterieChanging(value);
					this.SendPropertyChanging();
					this._ID_Materie = value;
					this.SendPropertyChanged("ID_Materie");
					this.OnID_MaterieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autor", DbType="Int")]
		public System.Nullable<int> Autor
		{
			get
			{
				return this._Autor;
			}
			set
			{
				if ((this._Autor != value))
				{
					if (this._Utilizatori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutorChanging(value);
					this.SendPropertyChanging();
					this._Autor = value;
					this.SendPropertyChanged("Autor");
					this.OnAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCreare", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataCreare
		{
			get
			{
				return this._DataCreare;
			}
			set
			{
				if ((this._DataCreare != value))
				{
					this.OnDataCreareChanging(value);
					this.SendPropertyChanging();
					this._DataCreare = value;
					this.SendPropertyChanged("DataCreare");
					this.OnDataCreareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teste_Intrebari", Storage="_Intrebaris", ThisKey="ID_Test", OtherKey="ID_Test")]
		public EntitySet<Intrebari> Intrebaris
		{
			get
			{
				return this._Intrebaris;
			}
			set
			{
				this._Intrebaris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizatori_Teste", Storage="_Utilizatori", ThisKey="Autor", OtherKey="ID_Utilizator", IsForeignKey=true)]
		public Utilizatori Utilizatori
		{
			get
			{
				return this._Utilizatori.Entity;
			}
			set
			{
				Utilizatori previousValue = this._Utilizatori.Entity;
				if (((previousValue != value) 
							|| (this._Utilizatori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizatori.Entity = null;
						previousValue.Testes.Remove(this);
					}
					this._Utilizatori.Entity = value;
					if ((value != null))
					{
						value.Testes.Add(this);
						this._Autor = value.ID_Utilizator;
					}
					else
					{
						this._Autor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utilizatori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materii_Teste", Storage="_Materii", ThisKey="ID_Materie", OtherKey="ID_Materie", IsForeignKey=true)]
		public Materii Materii
		{
			get
			{
				return this._Materii.Entity;
			}
			set
			{
				Materii previousValue = this._Materii.Entity;
				if (((previousValue != value) 
							|| (this._Materii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materii.Entity = null;
						previousValue.Testes.Remove(this);
					}
					this._Materii.Entity = value;
					if ((value != null))
					{
						value.Testes.Add(this);
						this._ID_Materie = value.ID_Materie;
					}
					else
					{
						this._ID_Materie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Materii");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Intrebaris(Intrebari entity)
		{
			this.SendPropertyChanging();
			entity.Teste = this;
		}
		
		private void detach_Intrebaris(Intrebari entity)
		{
			this.SendPropertyChanging();
			entity.Teste = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intrebari")]
	public partial class Intrebari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Intrebare;
		
		private System.Nullable<int> _ID_Test;
		
		private string _TextIntrebare;
		
		private System.Nullable<double> _Punctaj;
		
		private EntitySet<Raspunsuri> _Raspunsuris;
		
		private EntityRef<Teste> _Teste;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_IntrebareChanging(int value);
    partial void OnID_IntrebareChanged();
    partial void OnID_TestChanging(System.Nullable<int> value);
    partial void OnID_TestChanged();
    partial void OnTextIntrebareChanging(string value);
    partial void OnTextIntrebareChanged();
    partial void OnPunctajChanging(System.Nullable<double> value);
    partial void OnPunctajChanged();
    #endregion
		
		public Intrebari()
		{
			this._Raspunsuris = new EntitySet<Raspunsuri>(new Action<Raspunsuri>(this.attach_Raspunsuris), new Action<Raspunsuri>(this.detach_Raspunsuris));
			this._Teste = default(EntityRef<Teste>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Intrebare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Intrebare
		{
			get
			{
				return this._ID_Intrebare;
			}
			set
			{
				if ((this._ID_Intrebare != value))
				{
					this.OnID_IntrebareChanging(value);
					this.SendPropertyChanging();
					this._ID_Intrebare = value;
					this.SendPropertyChanged("ID_Intrebare");
					this.OnID_IntrebareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Test", DbType="Int")]
		public System.Nullable<int> ID_Test
		{
			get
			{
				return this._ID_Test;
			}
			set
			{
				if ((this._ID_Test != value))
				{
					if (this._Teste.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TestChanging(value);
					this.SendPropertyChanging();
					this._ID_Test = value;
					this.SendPropertyChanged("ID_Test");
					this.OnID_TestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextIntrebare", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TextIntrebare
		{
			get
			{
				return this._TextIntrebare;
			}
			set
			{
				if ((this._TextIntrebare != value))
				{
					this.OnTextIntrebareChanging(value);
					this.SendPropertyChanging();
					this._TextIntrebare = value;
					this.SendPropertyChanged("TextIntrebare");
					this.OnTextIntrebareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Punctaj", DbType="Float")]
		public System.Nullable<double> Punctaj
		{
			get
			{
				return this._Punctaj;
			}
			set
			{
				if ((this._Punctaj != value))
				{
					this.OnPunctajChanging(value);
					this.SendPropertyChanging();
					this._Punctaj = value;
					this.SendPropertyChanged("Punctaj");
					this.OnPunctajChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Intrebari_Raspunsuri", Storage="_Raspunsuris", ThisKey="ID_Intrebare", OtherKey="ID_Intrebare")]
		public EntitySet<Raspunsuri> Raspunsuris
		{
			get
			{
				return this._Raspunsuris;
			}
			set
			{
				this._Raspunsuris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teste_Intrebari", Storage="_Teste", ThisKey="ID_Test", OtherKey="ID_Test", IsForeignKey=true)]
		public Teste Teste
		{
			get
			{
				return this._Teste.Entity;
			}
			set
			{
				Teste previousValue = this._Teste.Entity;
				if (((previousValue != value) 
							|| (this._Teste.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teste.Entity = null;
						previousValue.Intrebaris.Remove(this);
					}
					this._Teste.Entity = value;
					if ((value != null))
					{
						value.Intrebaris.Add(this);
						this._ID_Test = value.ID_Test;
					}
					else
					{
						this._ID_Test = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teste");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Raspunsuris(Raspunsuri entity)
		{
			this.SendPropertyChanging();
			entity.Intrebari = this;
		}
		
		private void detach_Raspunsuris(Raspunsuri entity)
		{
			this.SendPropertyChanging();
			entity.Intrebari = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Raspunsuri")]
	public partial class Raspunsuri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Raspuns;
		
		private System.Nullable<int> _ID_Intrebare;
		
		private string _TextRaspuns;
		
		private bool _EsteCorect;
		
		private EntityRef<Intrebari> _Intrebari;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RaspunsChanging(int value);
    partial void OnID_RaspunsChanged();
    partial void OnID_IntrebareChanging(System.Nullable<int> value);
    partial void OnID_IntrebareChanged();
    partial void OnTextRaspunsChanging(string value);
    partial void OnTextRaspunsChanged();
    partial void OnEsteCorectChanging(bool value);
    partial void OnEsteCorectChanged();
    #endregion
		
		public Raspunsuri()
		{
			this._Intrebari = default(EntityRef<Intrebari>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Raspuns", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Raspuns
		{
			get
			{
				return this._ID_Raspuns;
			}
			set
			{
				if ((this._ID_Raspuns != value))
				{
					this.OnID_RaspunsChanging(value);
					this.SendPropertyChanging();
					this._ID_Raspuns = value;
					this.SendPropertyChanged("ID_Raspuns");
					this.OnID_RaspunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Intrebare", DbType="Int")]
		public System.Nullable<int> ID_Intrebare
		{
			get
			{
				return this._ID_Intrebare;
			}
			set
			{
				if ((this._ID_Intrebare != value))
				{
					if (this._Intrebari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_IntrebareChanging(value);
					this.SendPropertyChanging();
					this._ID_Intrebare = value;
					this.SendPropertyChanged("ID_Intrebare");
					this.OnID_IntrebareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextRaspuns", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TextRaspuns
		{
			get
			{
				return this._TextRaspuns;
			}
			set
			{
				if ((this._TextRaspuns != value))
				{
					this.OnTextRaspunsChanging(value);
					this.SendPropertyChanging();
					this._TextRaspuns = value;
					this.SendPropertyChanged("TextRaspuns");
					this.OnTextRaspunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsteCorect", DbType="Bit NOT NULL")]
		public bool EsteCorect
		{
			get
			{
				return this._EsteCorect;
			}
			set
			{
				if ((this._EsteCorect != value))
				{
					this.OnEsteCorectChanging(value);
					this.SendPropertyChanging();
					this._EsteCorect = value;
					this.SendPropertyChanged("EsteCorect");
					this.OnEsteCorectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Intrebari_Raspunsuri", Storage="_Intrebari", ThisKey="ID_Intrebare", OtherKey="ID_Intrebare", IsForeignKey=true)]
		public Intrebari Intrebari
		{
			get
			{
				return this._Intrebari.Entity;
			}
			set
			{
				Intrebari previousValue = this._Intrebari.Entity;
				if (((previousValue != value) 
							|| (this._Intrebari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Intrebari.Entity = null;
						previousValue.Raspunsuris.Remove(this);
					}
					this._Intrebari.Entity = value;
					if ((value != null))
					{
						value.Raspunsuris.Add(this);
						this._ID_Intrebare = value.ID_Intrebare;
					}
					else
					{
						this._ID_Intrebare = default(Nullable<int>);
					}
					this.SendPropertyChanged("Intrebari");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
